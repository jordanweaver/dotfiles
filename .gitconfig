[user]
	email = jordan.weaver@setpoint.io
	name = Jordan Weaver
[core]
	excludesfile = /Users/jordanweaver/.gitignore_global
	editor = cursor --wait
[difftool "vscode"]
	cmd = cursor --wait --diff $LOCAL $REMOTE
[mergetool "vscode"]
	cmd = cursor --wait --merge $REMOTE $LOCAL $BASE $MERGED
[alias]
    br = branch
    cp = cherry-pick
    co = checkout
    ci = commit
	sa = stash apply
	ss = stash save
    sl = stash list
    st = status
    pushup = "!git push -u origin $(git rev-parse --abbrev-ref HEAD)"
	amend = commit -a --amend --no-edit
	cleanup = !"git branch --merged | grep -vE 'main' | xargs -n 1 git branch -D"
	la = "!git config -l | grep alias | cut -c 7-"
    la = "!git config -l | grep alias | cut -c 7-"
	ls = log --pretty=format:\"%C(yellow)%h%Cred%d %Creset%s%Cblue [%cn]\" --decorate
	ll = log --pretty=format:\"%C(yellow)%h%Cred%d %Creset%s%Cblue [%cn]\" --decorate --numstat
	ld = log --pretty=format:\"%C(yellow)%h %ad%Cred%d %Creset%s%Cblue [%cn]\" --decorate --date=relative
	lds = log --pretty=format:\"%C(yellow)%h %ad%Cred%d %Creset%s%Cblue [%cn]\" --decorate --date=short
	# pretty log of current branch only.
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s - %aN - %Cgreen(%cr)' --abbrev-commit --date=relative
	# Pretty log of all branches
	lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%Creset' --abbrev-commit --date=relative --all
	# Pretty log of all branches, but just first parent
	lgaf = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%Creset' --abbrev-commit --date=relative --all --first-parent
	last = log -1 HEAD
	oops = reset 'HEAD^'
    undo = reset HEAD~1 --mixed
	changed = !"git diff --name-only $(git cbranch) $(git merge-base $(git cbranch) master)"
	unstage = reset --
    cii = "!f() { \
        count=$#; \
        branch=$(git symbolic-ref --quiet --short HEAD || echo ''); \
        ticket=$(printf '%s' \"$branch\" | grep -oE '[a-z]+-[0-9]+' | head -1 | tr '[:lower:]' '[:upper:]'); \
        prefix=\"${ticket:+$ticket: }\"; \
        if [ $count -eq 0 ]; then echo 'usage: git cii [commit-opts] \"message\"' >&2; return 1; fi; \
        msg=${!count}; \
        if [ $count -gt 1 ]; then \
        set -- \"${@:1:$((count-1))}\"; \
        git commit \"$@\" -m \"$prefix$msg\"; \
        else \
        git commit -m \"$prefix$msg\"; \
        fi; \
    }; f"
[init]
	defaultBranch = main
[filter "lfs"]
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
  clean = git-lfs clean -- %f

[blame]
	ignoreRevsFile = .git-blame-ignore-revs
